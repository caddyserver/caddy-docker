name: Release Tagged

on:
  repository_dispatch:
    types: [release-tagged]

jobs:
  release-tagged:
    runs-on: ubuntu-latest

    steps:
      - name: Install dependencies
        run: |
          GOMPLATE_VERSION="v3.6.0"
          sudo curl -SLo /usr/local/bin/gomplate https://github.com/hairyhenderson/gomplate/releases/download/${GOMPLATE_VERSION}/gomplate_linux-amd64-slim
          sudo chmod +x /usr/local/bin/gomplate

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: master

      - name: Update stackbrew config
        id: vars
        env:
          TAG: ${{ github.event.client_payload.tag }}
        run: |
          # Parse semver
          SEMVER_RE='[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z\.-]*\)'
          TAG_MAJOR=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\1#"`
          TAG_MINOR=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\2#"`
          TAG_PATCH=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\3#"`
          TAG_SPECIAL=`echo ${TAG#v} | sed -e "s#$SEMVER_RE#\4#"`

          # Get the checksums file from the tagged release
          echo "Downloading checksums for ${TAG}..."
          wget -q https://github.com/caddyserver/caddy/releases/download/${TAG}/caddy_${TAG#v}_checksums.txt -O checksums.txt
          echo ""

          # Update the version tag in the config
          echo "Updating version to '${TAG#v}'"
          sed -i "s/caddy_version: .*/caddy_version: '${TAG#v}'/" stackbrew-config.yaml
          sed -i "s/caddy_major: .*/caddy_major: '${TAG_MAJOR}'/" stackbrew-config.yaml

          # The keys in the stackbrew-config we want to update
          arches=(
            amd64
            arm32v6
            arm32v7
            arm64v8
            ppc64le
            s390x
            windows_amd64
          )

          # The names of the archives in the checksums file
          archive_names=(
            linux_amd64.tar.gz
            linux_armv6.tar.gz
            linux_armv7.tar.gz
            linux_arm64.tar.gz
            linux_ppc64le.tar.gz
            linux_s390x.tar.gz
            windows_amd64.zip
          )

          # Get the last index for the loop
          last=$(expr "${#arches[@]}" - 1)

          for i in $(seq 0 $last); do
            # Grab the current arch from the list
            arch="${arches[i]}"

            # Get the checksum of the archive for this arch
            checksum=$(awk "/${archive_names[i]}/{print \$1}" checksums.txt)

            # Skip if we don't have the checksum
            [ -z "${checksum}" ] && continue

            # Update the checksum in the config
            printf "Updating checksum for %-14s\t${checksum:0:32}...\n" "${arch}"
            sed -i "s/\b${arch}: .*/${arch}: ${checksum}/" stackbrew-config.yaml
          done

          rm checksums.txt
          echo "All done!"
          echo ""

          git diff

          # Save some vars for use later
          echo "::set-output name=TAG::${TAG}"
          echo "::set-output name=TAG_MAJOR::${TAG_MAJOR}"
          echo "::set-output name=TAG_MINOR::${TAG_MINOR}"
          echo "::set-output name=TAG_PATCH::${TAG_PATCH}"
          echo "::set-output name=TAG_SPECIAL::${TAG_SPECIAL}"

      - name: Regenerate Dockerfiles
        run: |
          make gen-dockerfiles
          git diff

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: "ci: Updating to ${{ steps.vars.outputs.TAG }}"
          reviewers: "hairyhenderson,francislavoie,mholt"
          title: "Updating to ${{ steps.vars.outputs.TAG }}"
          body: |
            :tada: :rocket: :tada: :rocket: :tada: :rocket: :tada: :rocket: :tada:

            Updating to ${{ steps.vars.outputs.TAG }}

            Release: https://github.com/caddyserver/caddy/releases/tag/${{ steps.vars.outputs.TAG }}
