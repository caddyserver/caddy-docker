version: "2"

########################################################################################################################
#
# TOC
#
########################################################################################################################
#
# 1. BUILD
# 2. RUN
# 3. MISC
#
########################################################################################################################

tasks:
  ######################################################################################################################
  #
  #  1. BUILD
  #
  ######################################################################################################################

  d:build:scratch:
    desc: Build a Caddy scratch-based Docker image
    cmds:
      - task: d:build
        vars:
          TARGET: scratch
          TAG_VERSION: '{{.TAG_VERSION | default "latest"}}'

  d:build:alpine:
    desc: Build a Caddy Alpine-based Docker image
    cmds:
      - task: d:build
        vars:
          TARGET: alpine
          TAG_VERSION: '{{.TAG_VERSION | default "latest"}}'

  d:build:
    silent: true
    deps:
      - task: d:lint
    preconditions:
      - sh: test '{{.TARGET}}' != '<no value>'
        msg: TARGET needs to contain the Docker TARGET [alpine, scratch]
      - sh: test '{{.TAG_VERSION}}' != '<no value>'
        msg: TAG_VERSION needs to contain the tag that will be assigned to the Docker build
    cmds:
      - docker build
        --target {{.TARGET}}
        --tag {{.TAG_REPOSITORY}}/{{.TAG_NAME}}:{{.TARGET}}-{{.TAG_VERSION}}
        --build-arg CADDY_SOURCE_VERSION={{.CADDY_SOURCE_VERSION}}
        .

  d:lint:
    desc: Apply a Dockerfile linter (https://github.com/hadolint/hadolint)
    silent: true
    cmds:
      - docker run
        --interactive
        --rm
        hadolint/hadolint:{{.HADOLINT_TAG_VERSION}}
        hadolint
        --ignore DL3018
        -
        < Dockerfile

  ######################################################################################################################
  #
  #  2. RUN
  #
  ######################################################################################################################

  d:run:scratch:
    desc: Build and run the Caddy scratch-based Docker image
    cmds:
      - task: d:run
        vars:
          TYPE: alpine
          TAG_VERSION: '{{.TAG_VERSION | default "latest"}}'

  d:run:alpine:
    desc: Build and run the Caddy alpine-based Docker image
    cmds:
      - task: d:run
        vars:
          TYPE: alpine
          TAG_VERSION: '{{.TAG_VERSION | default "latest"}}'

  d:run:
    silent: true
    preconditions:
      - sh: test '{{.TYPE}}' != '<no value>'
        msg: TYPE needs to contain a value ie 'scratch' or 'alpine'
      - sh: test '{{.TAG_VERSION}}' != '<no value>'
        msg: TAG_VERSION needs to contain the image tag that will be run
    cmds:
      - task: d:build:{{.TYPE}}
        vars:
          TAG_VERSION: "{{.TAG_VERSION}}"
      - docker run
        --interactive
        --tty
        --rm
        --publish 8080:8080
        {{.TAG_REPOSITORY}}/{{.TAG_NAME}}:{{.TYPE}}-{{.TAG_VERSION}}

  ######################################################################################################################
  #
  #  3. MISC
  #
  ######################################################################################################################
